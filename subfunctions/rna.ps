%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.2.5
%%CreationDate: Mon Oct 29 11:35:09 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d0 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUaacaUAAGGAGUUUAUAUGGAAACCCUUAugAUUGUCCUAGAAUUUUACCAGUAAgcgcACAUGAGGAUCACCCAUGUgcUU\
) def
/coor [
[85.63100433 176.86735535]
[64.88461304 169.87107849]
[46.89093018 157.39761353]
[33.06047440 140.42472839]
[24.47741508 120.28294373]
[9.68440437 122.76625061]
[-5.10860729 125.24956512]
[-19.90161896 127.73287201]
[-34.69462967 130.21617126]
[-49.48764038 132.69949341]
[-64.28065491 135.18280029]
[-72.45402527 139.78941345]
[-79.66534424 137.47398376]
[-94.54001617 139.40896606]
[-109.41468811 141.34396362]
[-124.28936005 143.27894592]
[-133.72987366 155.95381165]
[-149.37968445 158.15812683]
[-161.95402527 148.58412170]
[-163.99276733 132.91189575]
[-154.28636169 120.43947601]
[-138.59344482 118.56654358]
[-126.22434235 128.40428162]
[-111.34967804 126.46928406]
[-96.47500610 124.53429413]
[-81.60033417 122.59931183]
[-66.76396179 120.38978577]
[-51.97094727 117.90647888]
[-37.17793655 115.42316437]
[-22.38492584 112.93985748]
[-7.59191513 110.45655060]
[7.20109606 107.97324371]
[21.99410629 105.48993683]
[21.96622658 94.92173004]
[23.36358261 84.44628143]
[26.16065407 74.25491333]
[30.30635452 64.53376007]
[35.72496414 55.46037292]
[42.31751633 47.20047379]
[49.96360397 39.90492630]
[58.52357483 33.70697784]
[67.84108734 28.71982765]
[77.74595642 25.03456497]
[88.05728912 22.71850014]
[98.58674622 21.81393051]
[109.14200592 22.33738136]
[119.53030396 24.27928925]
[129.56188965 27.60418892]
[139.05354309 32.25135422]
[147.83190918 38.13590240]
[155.73666382 45.15036011]
[162.62341309 53.16661072]
[168.36639404 62.03824234]
[172.86070251 71.60322571]
[176.02426147 81.68685150]
[177.79927063 92.10496521]
[178.15333557 102.66726685]
[177.07998657 113.18085480]
[174.59881592 123.45370483]
[170.75514221 133.29818726]
[183.65213013 140.95765686]
[196.54913330 148.61712646]
[209.44613647 156.27659607]
[222.34312439 163.93606567]
[235.24012756 171.59553528]
[248.13711548 179.25500488]
[257.35220337 181.01771545]
[261.36172485 187.44331360]
[273.96685791 195.57411194]
[290.36386108 195.84106445]
[298.09356689 210.30424500]
[289.20434570 224.08517456]
[272.84066772 223.00721741]
[265.83605957 208.17927551]
[253.23091125 200.04847717]
[240.47766113 192.15199280]
[227.58065796 184.49252319]
[214.68365479 176.83305359]
[201.78666687 169.17359924]
[188.88966370 161.51412964]
[175.99266052 153.85466003]
[163.09567261 146.19519043]
[147.81614685 161.87628174]
[128.78833008 172.70687866]
] def
/pairs [
[5 33]
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[13 26]
[14 25]
[15 24]
[16 23]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[68 75]
[69 74]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
